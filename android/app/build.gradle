plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
    
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode', '1') // Provide default value '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName', '1.0') // Provide default value '1.0'

android {
    namespace "com.example.transport_app_iub"
    compileSdkVersion flutter.compileSdkVersion  // Use Flutter's compile SDK version
    ndkVersion flutter.ndkVersion  // Use Flutter's NDK version

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11
}

    kotlinOptions {
        jvmTarget = '11'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.transport_app_iub"
        minSdkVersion 23  // Set minimum SDK version to 23 to meet Firebase Auth's requirements
        targetSdkVersion flutter.compileSdkVersion  // Use the same version as the compile SDK
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // Keep signing with debug keys for now to support `flutter run --release`
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:33.2.0')  // Firebase BoM
    implementation 'com.google.firebase:firebase-auth'                  // Firebase Authentication
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:2.0.20'     // Kotlin Standard Library
}